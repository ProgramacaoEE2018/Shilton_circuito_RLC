{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referência da Classe QCPAxisTicker\par \pard\plain 
{\tc\tcl2 \v QCPAxisTicker}
{\xe \v QCPAxisTicker}
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The base class tick generator used by {\b QCPAxis} to create tick positions and tick labels. }}\par
{
{\f2 #include <qcustomplot.h>}}\par
Diagrama de hierarquia para QCPAxisTicker:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classQCPAxisTicker__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos Públicos\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TickStepStrategy} \{ {\b tssReadability}, 
{\b tssMeetTickCount}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros Públicos\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTicker} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAxisTicker} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b tickStepStrategy} () const\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickCount} () const\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tickOrigin} () const\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickStepStrategy} ({\b TickStepStrategy} strategy)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickCount} (int count)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickOrigin} (double origin)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b generate} (const {\b QCPRange} &range, const QLocale &locale, QChar formatChar, int precision, QVector< double > &ticks, QVector< double > *subTicks, QVector< QString > *tickLabels)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros Protegidos\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b getTickStep} (const {\b QCPRange} &range)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b getSubTickCount} (double tickStep)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QString {\b getTickLabel} (double tick, const QLocale &locale, QChar formatChar, int precision)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createTickVector} (double tickStep, const {\b QCPRange} &range)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createSubTickVector} (int subTickCount, const QVector< double > &ticks)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< QString > {\b createLabelVector} (const QVector< double > &ticks, const QLocale &locale, QChar formatChar, int precision)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b trimTicks} (const {\b QCPRange} &range, QVector< double > &ticks, bool keepOneOutlier) const\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pickClosest} (double target, const QVector< double > &candidates) const\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getMantissa} (double input, double *magnitude=0) const\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cleanMantissa} (double input) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b mTickStepStrategy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTickCount}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mTickOrigin}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrição detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The base class tick generator used by {\b QCPAxis} to create tick positions and tick labels. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Each {\b QCPAxis} has an internal {\b QCPAxisTicker} (or a subclass) in order to generate tick positions and tick labels for the current axis range. The ticker of an axis can be set via {\b QCPAxis::setTicker}. Since that method takes a {\f2 QSharedPointer<QCPAxisTicker>} , multiple axes can share the same ticker instance.\par
This base class generates normal tick coordinates and numeric labels for linear axes. It picks a reasonable tick step (the separation between ticks) which results in readable tick labels. The number of ticks that should be approximately generated can be set via {\b setTickCount}. Depending on the current tick step strategy ({\b setTickStepStrategy}), the algorithm either sacrifices readability to better match the specified tick count ({\b QCPAxisTicker::tssMeetTickCount}) or relaxes the tick count in favor of better tick steps ({\b QCPAxisTicker::tssReadability}), which is the default.\par
The following more specialized axis ticker subclasses are available, see details in the respective class documentation:\par
{\qc  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\b QCPAxisTickerFixed}\cell }{ \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\b QCPAxisTickerLog}\cell }{ \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\b QCPAxisTickerPi}\cell }{ \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\b QCPAxisTickerText}\cell }{ \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\b QCPAxisTickerDateTime}\cell }{ \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\b QCPAxisTickerTime}\cell }{  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
} \par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Creating own axis tickers
\par}
{\tc\tcl2 \v Creating own axis tickers}
Creating own axis tickers can be achieved very easily by sublassing {\b QCPAxisTicker} and reimplementing some or all of the available virtual methods.\par
In the simplest case you might wish to just generate different tick steps than the other tickers, so you only reimplement the method {\b getTickStep}. If you additionally want control over the string that will be shown as tick label, reimplement {\b getTickLabel}.\par
If you wish to have complete control, you can generate the tick vectors and tick label vectors yourself by reimplementing {\b createTickVector} and {\b createLabelVector}. The default implementations use the previously mentioned virtual methods {\b getTickStep} and {\b getTickLabel}, but your reimplementations don't necessarily need to do so. For example in the case of unequal tick steps, the method {\b getTickStep} loses its usefulness and can be ignored.\par
The sub tick count between major ticks can be controlled with {\b getSubTickCount}. Full sub tick placement control is obtained by reimplementing {\b createSubTickVector}.\par
See the documentation of all these virtual methods in {\b QCPAxisTicker} for detailed information about the parameters and expected return values. \par}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerações\par
\pard\plain 
{\xe \v TickStepStrategy\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:TickStepStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPAxisTicker::TickStepStrategy}}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the strategies that the axis ticker may follow when choosing the size of the tick step.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Veja também:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\b setTickStepStrategy} \par
}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v tssReadability\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:tssReadability}
{\qr tssReadability{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A nicely readable tick step is prioritized over matching the requested number of ticks (see {\b setTickCount}) \par
}\cell }{\row }
{\xe \v tssMeetTickCount\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:tssMeetTickCount}
{\qr tssMeetTickCount{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Less readable tick steps are allowed which in turn facilitates getting closer to the requested tick count. \par
}\cell }{\row }
}
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1543   \{\par
 1544     tssReadability    \par
 1545     ,tssMeetTickCount \par
 1546   \};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v QCPAxisTicker\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:QCPAxisTicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAxisTicker::QCPAxisTicker ()}}
\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs the ticker and sets reasonable default values. Axis tickers are commonly created managed by a QSharedPointer, which then can be passed to {\b QCPAxis::setTicker}. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5489                              :\par
 5490   mTickStepStrategy(tssReadability),\par
 5491   mTickCount(5),\par
 5492   mTickOrigin(0)\par
 5493 \{\par
 5494 \}\par
}
}
{\xe \v ~QCPAxisTicker\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:~QCPAxisTicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAxisTicker::~QCPAxisTicker (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5497 \{\par
 5498   \par
 5499 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funções membros\par
\pard\plain 
{\xe \v cleanMantissa\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:cleanMantissa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTicker::cleanMantissa (double  {\i input}) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5823 \{\par
 5824   double magnitude;\par
 5825   const double mantissa = getMantissa(input, &magnitude);\par
 5826   switch (mTickStepStrategy)\par
 5827   \{\par
 5828     case tssReadability:\par
 5829     \{\par
 5830       return pickClosest(mantissa, QVector<double>() << 1.0 << 2.0 << 2.5 << 5.0 << 10.0)*magnitude;\par
 5831     \}\par
 5832     case tssMeetTickCount:\par
 5833     \{\par
 5834       // this gives effectively a mantissa of 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.0, 8.0, 10.0\par
 5835       if (mantissa <= 5.0)\par
 5836         return (int)(mantissa*2)/2.0*magnitude; // round digit after decimal point to 0.5\par
 5837       else\par
 5838         return (int)(mantissa/2.0)*2.0*magnitude; // round to first digit in multiples of 2\par
 5839     \}\par
 5840   \}\par
 5841   return input;\par
 5842 \}\par
}
}
{\xe \v createLabelVector\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:createLabelVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QString > QCPAxisTicker::createLabelVector (const QVector< double > &  {\i ticks}, const QLocale &  {\i locale}, QChar  {\i formatChar}, int  {\i precision}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5732 \{\par
 5733   QVector<QString> result;\par
 5734   result.reserve(ticks.size());\par
 5735   for (int i=0; i<ticks.size(); ++i)\par
 5736     result.append(getTickLabel(ticks.at(i), locale, formatChar, precision));\par
 5737   return result;\par
 5738 \}\par
}
}
{\xe \v createSubTickVector\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:createSubTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< double > QCPAxisTicker::createSubTickVector (int  {\i subTickCount}, const QVector< double > &  {\i ticks}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5678 \{\par
 5679   QVector<double> result;\par
 5680   if (subTickCount <= 0 || ticks.size() < 2)\par
 5681     return result;\par
 5682   \par
 5683   result.reserve((ticks.size()-1)*subTickCount);\par
 5684   for (int i=1; i<ticks.size(); ++i)\par
 5685   \{\par
 5686     double subTickStep = (ticks.at(i)-ticks.at(i-1))/(double)(subTickCount+1);\par
 5687     for (int k=1; k<=subTickCount; ++k)\par
 5688       result.append(ticks.at(i-1) + k*subTickStep);\par
 5689   \}\par
 5690   return result;\par
 5691 \}\par
}
}
{\xe \v createTickVector\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:createTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< double > QCPAxisTicker::createTickVector (double  {\i tickStep}, const {\b QCPRange} &  {\i range}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplementado por {\b QCPAxisTickerLog} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGC \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b QCPAxisTickerDateTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5709 \{\par
 5710   QVector<double> result;\par
 5711   // Generate tick positions according to tickStep:\par
 5712   qint64 firstStep = floor((range.lower-mTickOrigin)/tickStep); // do not use qFloor here, or we'll lose 64 bit precision\par
 5713   qint64 lastStep = ceil((range.upper-mTickOrigin)/tickStep); // do not use qCeil here, or we'll lose 64 bit precision\par
 5714   int tickcount = lastStep-firstStep+1;\par
 5715   if (tickcount < 0) tickcount = 0;\par
 5716   result.resize(tickcount);\par
 5717   for (int i=0; i<tickcount; ++i)\par
 5718     result[i] = mTickOrigin + (firstStep+i)*tickStep;\par
 5719   return result;\par
 5720 \}\par
}
}
{\xe \v generate\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:generate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTicker::generate (const {\b QCPRange} &  {\i range}, const QLocale &  {\i locale}, QChar  {\i formatChar}, int  {\i precision}, QVector< double > &  {\i ticks}, QVector< double > *  {\i subTicks}, QVector< QString > *  {\i tickLabels}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the method called by {\b QCPAxis} in order to actually generate tick coordinates ({\i ticks} ), tick label strings ({\i tickLabels} ) and sub tick coordinates ({\i subTicks} ).\par
The ticks are generated for the specified {\i range} . The generated labels typically follow the specified {\i locale} , {\i formatChar}  and number {\i precision} , however this might be different (or even irrelevant) for certain {\b QCPAxisTicker} subclasses.\par
The output parameter {\i ticks}  is filled with the generated tick positions in axis coordinates. The output parameters {\i subTicks}  and {\i tickLabels}  are optional (set them to 0 if not needed) and are respectively filled with sub tick coordinates, and tick label strings belonging to {\i ticks}  by index. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5553 \{\par
 5554   // generate (major) ticks:\par
 5555   double tickStep = getTickStep(range);\par
 5556   ticks = createTickVector(tickStep, range);\par
 5557   trimTicks(range, ticks, true); // trim ticks to visible range plus one outer tick on each side (incase a subclass createTickVector creates more)\par
 5558   \par
 5559   // generate sub ticks between major ticks:\par
 5560   if (subTicks)\par
 5561   \{\par
 5562     if (ticks.size() > 0)\par
 5563     \{\par
 5564       *subTicks = createSubTickVector(getSubTickCount(tickStep), ticks);\par
 5565       trimTicks(range, *subTicks, false);\par
 5566     \} else\par
 5567       *subTicks = QVector<double>();\par
 5568   \}\par
 5569   \par
 5570   // finally trim also outliers (no further clipping happens in axis drawing):\par
 5571   trimTicks(range, ticks, false);\par
 5572   // generate labels for visible ticks if requested:\par
 5573   if (tickLabels)\par
 5574     *tickLabels = createLabelVector(ticks, locale, formatChar, precision);\par
 5575 \}\par
}
}
{\xe \v getMantissa\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:getMantissa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTicker::getMantissa (double  {\i input}, double *  {\i magnitude} = {\f2 0}) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5810 \{\par
 5811   const double mag = qPow(10.0, qFloor(qLn(input)/qLn(10.0)));\par
 5812   if (magnitude) *magnitude = mag;\par
 5813   return input/mag;\par
 5814 \}\par
}
}
{\xe \v getSubTickCount\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:getSubTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisTicker::getSubTickCount (double  {\i tickStep}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplementado por {\b QCPAxisTickerLog} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerPi} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGK \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b QCPAxisTickerDateTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5601 \{\par
 5602   int result = 1; // default to 1, if no proper value can be found\par
 5603   \par
 5604   // separate integer and fractional part of mantissa:\par
 5605   double epsilon = 0.01;\par
 5606   double intPartf;\par
 5607   int intPart;\par
 5608   double fracPart = modf(getMantissa(tickStep), &intPartf);\par
 5609   intPart = intPartf;\par
 5610   \par
 5611   // handle cases with (almost) integer mantissa:\par
 5612   if (fracPart < epsilon || 1.0-fracPart < epsilon)\par
 5613   \{\par
 5614     if (1.0-fracPart < epsilon)\par
 5615       ++intPart;\par
 5616     switch (intPart)\par
 5617     \{\par
 5618       case 1: result = 4; break; // 1.0 -> 0.2 substep\par
 5619       case 2: result = 3; break; // 2.0 -> 0.5 substep\par
 5620       case 3: result = 2; break; // 3.0 -> 1.0 substep\par
 5621       case 4: result = 3; break; // 4.0 -> 1.0 substep\par
 5622       case 5: result = 4; break; // 5.0 -> 1.0 substep\par
 5623       case 6: result = 2; break; // 6.0 -> 2.0 substep\par
 5624       case 7: result = 6; break; // 7.0 -> 1.0 substep\par
 5625       case 8: result = 3; break; // 8.0 -> 2.0 substep\par
 5626       case 9: result = 2; break; // 9.0 -> 3.0 substep\par
 5627     \}\par
 5628   \} else\par
 5629   \{\par
 5630     // handle cases with significantly fractional mantissa:\par
 5631     if (qAbs(fracPart-0.5) < epsilon) // *.5 mantissa\par
 5632     \{\par
 5633       switch (intPart)\par
 5634       \{\par
 5635         case 1: result = 2; break; // 1.5 -> 0.5 substep\par
 5636         case 2: result = 4; break; // 2.5 -> 0.5 substep\par
 5637         case 3: result = 4; break; // 3.5 -> 0.7 substep\par
 5638         case 4: result = 2; break; // 4.5 -> 1.5 substep\par
 5639         case 5: result = 4; break; // 5.5 -> 1.1 substep (won't occur with default getTickStep from here on)\par
 5640         case 6: result = 4; break; // 6.5 -> 1.3 substep\par
 5641         case 7: result = 2; break; // 7.5 -> 2.5 substep\par
 5642         case 8: result = 4; break; // 8.5 -> 1.7 substep\par
 5643         case 9: result = 4; break; // 9.5 -> 1.9 substep\par
 5644       \}\par
 5645     \}\par
 5646     // if mantissa fraction isn't 0.0 or 0.5, don't bother finding good sub tick marks, leave default\par
 5647   \}\par
 5648   \par
 5649   return result;\par
 5650 \}\par
}
}
{\xe \v getTickLabel\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:getTickLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisTicker::getTickLabel (double  {\i tick}, const QLocale &  {\i locale}, QChar  {\i formatChar}, int  {\i precision}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplementado por {\b QCPAxisTickerPi} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGP \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b QCPAxisTickerDateTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5664 \{\par
 5665   return locale.toString(tick, formatChar.toLatin1(), precision);\par
 5666 \}\par
}
}
{\xe \v getTickStep\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:getTickStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTicker::getTickStep (const {\b QCPRange} &  {\i range}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplementado por {\b QCPAxisTickerLog} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerPi} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerFixed} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGW \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b QCPAxisTickerDateTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABGX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5588 \{\par
 5589   double exactStep = range.size()/(double)(mTickCount+1e-10); // mTickCount ticks on average, the small addition is to prevent jitter on exact integers\par
 5590   return cleanMantissa(exactStep);\par
 5591 \}\par
}
}
{\xe \v pickClosest\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:pickClosest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTicker::pickClosest (double  {\i target}, const QVector< double > &  {\i candidates}) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5790 \{\par
 5791   if (candidates.size() == 1)\par
 5792     return candidates.first();\par
 5793   QVector<double>::const_iterator it = std::lower_bound(candidates.constBegin(), candidates.constEnd(), target);\par
 5794   if (it == candidates.constEnd())\par
 5795     return *(it-1);\par
 5796   else if (it == candidates.constBegin())\par
 5797     return *it;\par
 5798   else\par
 5799     return target-*(it-1) < *it-target ? *(it-1) : *it;\par
 5800 \}\par
}
}
{\xe \v setTickCount\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:setTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTicker::setTickCount (int  {\i count})}}
\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets how many ticks this ticker shall aim to generate across the axis range. Note that {\i count}  is not guaranteed to be matched exactly, as generating readable tick intervals may conflict with the requested number of ticks.\par
Whether the readability has priority over meeting the requested {\i count}  can be specified with {\b setTickStepStrategy}. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5519 \{\par
 5520   if (count > 0)\par
 5521     mTickCount = count;\par
 5522   else\par
 5523     qDebug() << Q_FUNC_INFO << "tick count must be greater than zero:" << count;\par
 5524 \}\par
}
}
{\xe \v setTickOrigin\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:setTickOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTicker::setTickOrigin (double  {\i origin})}}
\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the mathematical coordinate (or "offset") of the zeroth tick. This tick coordinate is just a concept and doesn't need to be inside the currently visible axis range.\par
By default {\i origin}  is zero, which for example yields ticks \{-5, 0, 5, 10, 15,...\} when the tick step is five. If {\i origin}  is now set to 1 instead, the correspondingly generated ticks would be \{-4, 1, 6, 11, 16,...\}. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5535 \{\par
 5536   mTickOrigin = origin;\par
 5537 \}\par
}
}
{\xe \v setTickStepStrategy\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:setTickStepStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTicker::setTickStepStrategy ({\b QCPAxisTicker::TickStepStrategy}  {\i strategy})}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets which strategy the axis ticker follows when choosing the size of the tick step. For the available strategies, see {\b TickStepStrategy}. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5506 \{\par
 5507   mTickStepStrategy = strategy;\par
 5508 \}\par
}
}
{\xe \v tickCount\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:tickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisTicker::tickCount () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1554 \{ return mTickCount; \}\par
}
}
{\xe \v tickOrigin\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:tickOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTicker::tickOrigin () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1555 \{ return mTickOrigin; \}\par
}
}
{\xe \v tickStepStrategy\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:tickStepStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TickStepStrategy} QCPAxisTicker::tickStepStrategy () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  1553 \{ return mTickStepStrategy; \}\par
}
}
{\xe \v trimTicks\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:trimTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTicker::trimTicks (const {\b QCPRange} &  {\i range}, QVector< double > &  {\i ticks}, bool  {\i keepOneOutlier}) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  5748 \{\par
 5749   bool lowFound = false;\par
 5750   bool highFound = false;\par
 5751   int lowIndex = 0;\par
 5752   int highIndex = -1;\par
 5753   \par
 5754   for (int i=0; i < ticks.size(); ++i)\par
 5755   \{\par
 5756     if (ticks.at(i) >= range.lower)\par
 5757     \{\par
 5758       lowFound = true;\par
 5759       lowIndex = i;\par
 5760       break;\par
 5761     \}\par
 5762   \}\par
 5763   for (int i=ticks.size()-1; i >= 0; --i)\par
 5764   \{\par
 5765     if (ticks.at(i) <= range.upper)\par
 5766     \{\par
 5767       highFound = true;\par
 5768       highIndex = i;\par
 5769       break;\par
 5770     \}\par
 5771   \}\par
 5772   \par
 5773   if (highFound && lowFound)\par
 5774   \{\par
 5775     int trimFront = qMax(0, lowIndex-(keepOneOutlier ? 1 : 0));\par
 5776     int trimBack = qMax(0, ticks.size()-(keepOneOutlier ? 2 : 1)-highIndex);\par
 5777     if (trimFront > 0 || trimBack > 0)\par
 5778       ticks = ticks.mid(trimFront, ticks.size()-trimFront-trimBack);\par
 5779   \} else // all ticks are either all below or all above the range\par
 5780     ticks.clear();\par
 5781 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v mTickCount\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:mTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisTicker::mTickCount{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickOrigin\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:mTickOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTicker::mTickOrigin{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickStepStrategy\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:mTickStepStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TickStepStrategy} QCPAxisTicker::mTickStepStrategy{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documentação para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b qcustomplot.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b qcustomplot.cpp}\par
}}