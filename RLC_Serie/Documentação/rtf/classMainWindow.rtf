{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Referência da Classe MainWindow\par \pard\plain 
{\tc\tcl2 \v MainWindow}
{\xe \v MainWindow}
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\par
{
{\f2 #include <mainwindow.h>}}\par
Diagrama de hierarquia para MainWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classMainWindow__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros Públicos\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MainWindow} (QWidget *parent=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MainWindow} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Slots Privados\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_pushButton_clicked} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b makePlot} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mousePress} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mouseWheel} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeSelectedGraph} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeAllGraphs} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b contextMenuRequest} (QPoint pos)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b moveLegend} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b graphClicked} ({\b QCPAbstractPlottable} *plottable, int dataIndex)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_pushButton_2_clicked} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b on_actionTutorial_triggered} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Privados\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ui::MainWindow * {\b ui}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descrição detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v MainWindow\:MainWindow}
{\xe \v MainWindow\:MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MainWindow::MainWindow (QWidget *  {\i parent} = {\f2 0}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    24                                       :\par
   25     QMainWindow(parent),\par
   26     ui(new Ui::MainWindow)\par
   27 \{\par
   28     ui->setupUi(this);\par
   29 \}\par
}
}
{\xe \v ~MainWindow\:MainWindow}
{\xe \v MainWindow\:~MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MainWindow::~MainWindow ()}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    32 \{\par
   33     delete ui;\par
   34 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Funções membros\par
\pard\plain 
{\xe \v contextMenuRequest\:MainWindow}
{\xe \v MainWindow\:contextMenuRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::contextMenuRequest (QPoint  {\i pos}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   232 \{\par
  233   QMenu *menu = new QMenu(this);\par
  234   menu->setAttribute(Qt::WA_DeleteOnClose);\par
  235 \par
  236   if (ui->customPlot->legend->selectTest(pos, false) >= 0) // context menu on legend requested\par
  237   \{\par
  238     menu->addAction("Move to top left", this, SLOT(moveLegend()))->setData((int)(Qt::AlignTop|Qt::AlignLeft));\par
  239     menu->addAction("Move to top center", this, SLOT(moveLegend()))->setData((int)(Qt::AlignTop|Qt::AlignHCenter));\par
  240     menu->addAction("Move to top right", this, SLOT(moveLegend()))->setData((int)(Qt::AlignTop|Qt::AlignRight));\par
  241     menu->addAction("Move to bottom right", this, SLOT(moveLegend()))->setData((int)(Qt::AlignBottom|Qt::AlignRight));\par
  242     menu->addAction("Move to bottom left", this, SLOT(moveLegend()))->setData((int)(Qt::AlignBottom|Qt::AlignLeft));\par
  243   \} else  // general context menu on graphs requested\par
  244   \{\par
  245 \par
  246     if (ui->customPlot->selectedGraphs().size() > 0)\par
  247       menu->addAction("Remove selected graph", this, SLOT(removeSelectedGraph()));\par
  248     if (ui->customPlot->graphCount() > 0)\par
  249       menu->addAction("Remove all graphs", this, SLOT(removeAllGraphs()));\par
  250   \}\par
  251 \par
  252   menu->popup(ui->customPlot->mapToGlobal(pos));\par
  253 \}\par
}
}
{\xe \v graphClicked\:MainWindow}
{\xe \v MainWindow\:graphClicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::graphClicked ({\b QCPAbstractPlottable} *  {\i plottable}, int  {\i dataIndex}){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   223 \{\par
  224   // since we know we only have QCPGraphs in the plot, we can immediately access interface1D()\par
  225   // usually it's better to first check whether interface1D() returns non-zero, and only then use it.\par
  226   double dataValue = plottable->interface1D()->dataMainValue(dataIndex);\par
  227   double dataKey = plottable->interface1D()->dataMainKey(dataIndex);\par
  228   QString message = QString("Grafico '%1' : (%2s ; %3V)").arg(plottable->name()).arg(dataKey).arg(dataValue);\par
  229   ui->label_14->setText(message);\par
  230 \}\par
}
}
{\xe \v makePlot\:MainWindow}
{\xe \v MainWindow\:makePlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::makePlot (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   145                          \{\par
  146 \par
  147 \par
  148     // create graph and assign data to it:\par
  149     ui->customPlot->addGraph();\par
  150     ui->customPlot->graph(0)->setData(x_pts_E1,y_pts_E1);\par
  151     ui->customPlot->graph(0)->setPen(QPen(Qt::magenta));\par
  152 \par
  153     ui->customPlot->addGraph();\par
  154     ui->customPlot->graph(1)->setData(x_pts_Er,y_pts_Er);\par
  155     ui->customPlot->graph(1)->setPen(QPen(Qt::red));\par
  156 \par
  157     ui->customPlot->addGraph();\par
  158     ui->customPlot->graph(2)->setData(x_pts_Ec,y_pts_Ec);\par
  159     ui->customPlot->graph(2)->setPen(QPen(Qt::green));\par
  160 \par
  161     ui->customPlot->addGraph();\par
  162     ui->customPlot->graph(3)->setData(x_pts_Ei,y_pts_Ei);\par
  163     ui->customPlot->graph(3)->setPen(QPen(Qt::yellow));\par
  164 \par
  165     // give the axes some labels:\par
  166     ui->customPlot->xAxis->setLabel("Tempo");\par
  167     ui->customPlot->yAxis->setLabel("Tensao");\par
  168 \par
  169     // let the ranges scale themselves so graph 0 fits perfectly in the visible area:\par
  170     ui->customPlot->graph(0)->rescaleAxes();\par
  171     // same thing for graph 1, but only enlarge ranges (in case graph 1 is smaller than graph 0):\par
  172     ui->customPlot->graph(1)->rescaleAxes(true);\par
  173     ui->customPlot->graph(2)->rescaleAxes(true);\par
  174     ui->customPlot->graph(3)->rescaleAxes(true);\par
  175 \par
  176     //legend\par
  177     ui->customPlot->legend->setVisible(true);\par
  178     ui->customPlot->legend->setFont(QFont("Helvetica", 9));\par
  179     ui->customPlot->graph(0)->setName("E(t)");\par
  180     ui->customPlot->graph(1)->setName("Vr(t)");\par
  181     ui->customPlot->graph(2)->setName("Vc(t)");\par
  182     ui->customPlot->graph(3)->setName("Vi(t)");\par
  183 \par
  184     ui->customPlot->replot();\par
  185 \par
  186     //interacao com usuario\par
  187     ui->customPlot->setInteractions(QCP::iRangeDrag | QCP::iRangeZoom | QCP::iSelectAxes |\par
  188                                     QCP::iSelectLegend | QCP::iSelectPlottables);\par
  189 \par
  190     // connect slots that takes care that when an axis is selected, only that direction can be dragged and zoomed:\par
  191     connect(ui->customPlot, SIGNAL(mousePress(QMouseEvent*)), this, SLOT(mousePress()));\par
  192     connect(ui->customPlot, SIGNAL(mouseWheel(QWheelEvent*)), this, SLOT(mouseWheel()));\par
  193 \par
  194     // make bottom and left axes transfer their ranges to top and right axes:\par
  195     connect(ui->customPlot->xAxis, SIGNAL(rangeChanged(QCPRange)), ui->customPlot->xAxis2, SLOT(setRange(QCPRange)));\par
  196     connect(ui->customPlot->yAxis, SIGNAL(rangeChanged(QCPRange)), ui->customPlot->yAxis2, SLOT(setRange(QCPRange)));\par
  197 \par
  198     // connect some interaction slots:\par
  199     connect(ui->customPlot, SIGNAL(legendDoubleClick(QCPLegend*,QCPAbstractLegendItem*,QMouseEvent*)), this, SLOT(legendDoubleClick(QCPLegend*,QCPAbstractLegendItem*)));\par
  200 \par
  201     // connect slot that shows a message in the status bar when a graph is clicked:\par
  202     connect(ui->customPlot, SIGNAL(plottableClick(QCPAbstractPlottable*,int,QMouseEvent*)), this, SLOT(graphClicked(QCPAbstractPlottable*,int)));\par
  203 \par
  204     // setup policy and connect slot for context menu popup:\par
  205     ui->customPlot->setContextMenuPolicy(Qt::CustomContextMenu);\par
  206     connect(ui->customPlot, SIGNAL(customContextMenuRequested(QPoint)), this, SLOT(contextMenuRequest(QPoint)));\par
  207 \par
  208 \}\par
}
}
{\xe \v mousePress\:MainWindow}
{\xe \v MainWindow\:mousePress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::mousePress (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   280 \{\par
  281   // if an axis is selected, only allow the direction of that axis to be dragged\par
  282   // if no axis is selected, both directions may be dragged\par
  283 \par
  284   if (ui->customPlot->xAxis->selectedParts().testFlag(QCPAxis::spAxis))\par
  285     ui->customPlot->axisRect()->setRangeDrag(ui->customPlot->xAxis->orientation());\par
  286   else if (ui->customPlot->yAxis->selectedParts().testFlag(QCPAxis::spAxis))\par
  287     ui->customPlot->axisRect()->setRangeDrag(ui->customPlot->yAxis->orientation());\par
  288   else\par
  289     ui->customPlot->axisRect()->setRangeDrag(Qt::Horizontal|Qt::Vertical);\par
  290 \}\par
}
}
{\xe \v mouseWheel\:MainWindow}
{\xe \v MainWindow\:mouseWheel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::mouseWheel (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   268 \{\par
  269   // if an axis is selected, only allow the direction of that axis to be zoomed\par
  270   // if no axis is selected, both directions may be zoomed\par
  271 \par
  272   if (ui->customPlot->xAxis->selectedParts().testFlag(QCPAxis::spAxis))\par
  273     ui->customPlot->axisRect()->setRangeZoom(ui->customPlot->xAxis->orientation());\par
  274   else if (ui->customPlot->yAxis->selectedParts().testFlag(QCPAxis::spAxis))\par
  275     ui->customPlot->axisRect()->setRangeZoom(ui->customPlot->yAxis->orientation());\par
  276   else\par
  277     ui->customPlot->axisRect()->setRangeZoom(Qt::Horizontal|Qt::Vertical);\par
  278 \}\par
}
}
{\xe \v moveLegend\:MainWindow}
{\xe \v MainWindow\:moveLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::moveLegend (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   210 \{\par
  211   if (QAction* contextAction = qobject_cast<QAction*>(sender())) // make sure this slot is really called by a context menu action, so it carries the data we need\par
  212   \{\par
  213     bool ok;\par
  214     int dataInt = contextAction->data().toInt(&ok);\par
  215     if (ok)\par
  216     \{\par
  217       ui->customPlot->axisRect()->insetLayout()->setInsetAlignment(0, (Qt::Alignment)dataInt);\par
  218       ui->customPlot->replot();\par
  219     \}\par
  220   \}\par
  221 \}\par
}
}
{\xe \v on_actionTutorial_triggered\:MainWindow}
{\xe \v MainWindow\:on_actionTutorial_triggered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::on_actionTutorial_triggered (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v on_pushButton_2_clicked\:MainWindow}
{\xe \v MainWindow\:on_pushButton_2_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::on_pushButton_2_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   135 \{\par
  136     QMessageBox msgBox;\par
  137     msgBox.setText("1 - Insira valores desejados nos campos indicados;\\n"\par
  138                    "2 - Utilize o Mouse Whell para ampliar ou diminuir o grafico;\\n"\par
  139                    "3 - Arraste os eixos para ampliar ou diminir apenas uma dimensao;\\n"\par
  140                    "4 - Clique com Botão Direito sobre o grafico, curvas ou legenda para opcoes;\\n"\par
  141                    "5 - Insira novos valores e clique em Rodar para plotar novos sinais."\par
  142                    );\par
  143     msgBox.exec();\par
  144 \}\par
}
}
{\xe \v on_pushButton_clicked\:MainWindow}
{\xe \v MainWindow\:on_pushButton_clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::on_pushButton_clicked (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    37 \{\par
   38 \par
   39     //APAGAR DADOS USADOS NA PLOTAGEM PARA REALIMENTACAO\par
   40     x_pts_E1.clear();\par
   41     x_pts_Er.clear();\par
   42     x_pts_Ec.clear();\par
   43     x_pts_Ei.clear();\par
   44     y_pts_E1.clear();\par
   45     y_pts_Er.clear();\par
   46     y_pts_Ec.clear();\par
   47     y_pts_Ei.clear();\par
   48     ui->customPlot->clearPlottables();\par
   49 \par
   50 \par
   51 \par
   52 \par
   53     //LER VALORES DAS LINHAS DE EDIÇAO\par
   54     A = ui->lineA->text().toFloat();\par
   55     B = ui->lineB->text().toFloat();\par
   56     C = (ui->lineC->text().toFloat())*pi/180;//variavel C em rad, entrada em graus\par
   57     W = ui->lineW->text().toFloat();\par
   58     R = ui->lineRes->text().toFloat();\par
   59     Cap = ui->lineCap->text().toFloat();\par
   60     L= ui->lineL->text().toFloat();\par
   61     periodo = ui->lineTempo->text().toFloat();\par
   62     s = complex<double>(B, W); //variavel da funcao cirkt\par
   63     E1 = complex<double>(A*cos(C),A*sin(C));//fasor da fonte\par
   64 \par
   65 \par
   66     //ALERTA ERRO NA ENTRADA\par
   67      QMessageBox msgAlerta;\par
   68     if(ui->lineA->text().isEmpty() == false && A == 0)\{\par
   69         msgAlerta.setText("Fasor de Modulo Nulo.\\nFavor inserir outro valor.");\par
   70         msgAlerta.exec();\par
   71 \par
   72     \}\par
   73     if(W == 0 && A!=0)\{\par
   74         msgAlerta.setText("Desculpe!\\nFormato de sinal nao suportado.\\n Aguarde a proxima versao!");\par
   75         msgAlerta.exec();\par
   76     \}\par
   77     if(ui->lineA->text().isEmpty() || ui->lineW->text().isEmpty() || ui->lineRes->text().isEmpty()|| ui->lineCap->text().isEmpty()|| ui->lineL->text().isEmpty()|| ui->lineTempo->text().isEmpty())\{\par
   78         msgAlerta.setText("Campos obrigatorios: A, W, R, C, I, Tempo");\par
   79         msgAlerta.exec();\par
   80     \}\par
   81 \par
   82 \par
   83     //IMPRIMIR SINAL\par
   84     QString messageSignal = QString("%1 * exp(%2*t)*cos(%3*t + %4)").arg(A).arg(B).arg(W).arg(C);\par
   85     ui->label_15->setFrameStyle(QFrame::Panel | QFrame::Sunken);\par
   86     ui->label_15->setTextFormat(Qt::RichText);\par
   87     ui->label_15->setText(messageSignal);\par
   88     ui->label_15->setAlignment(Qt::AlignBottom | Qt::AlignCenter);\par
   89 \par
   90     //CRIAÇAO DE OBJETOS\par
   91     Resistor R1(R);\par
   92     R1.set_imp();\par
   93 \par
   94     Indutor L1(Cap);\par
   95     L1.set_imp(s);\par
   96 \par
   97     Capacitor C1(L);\par
   98     C1.set_imp(s);\par
   99 \par
  100     I = E1 / (R1.get_imp() + C1.get_imp() + L1.get_imp());//funçao do circuito\par
  101     Tensao Er(I, R1.get_imp());\par
  102     Tensao Ec(I, C1.get_imp());\par
  103     Tensao Ei(I, L1.get_imp());\par
  104 \par
  105     //ITERAÇAO COLETA DE DADOS\par
  106     for (t = 0; t <= periodo; t=t+((2*pi)/(W*100))) \{//sao calculadas 100 amostras no período do sinal\par
  107         saida = A * exp(B*t)*cos(W*t + C);\par
  108         x_pts_E1.push_back(t);\par
  109         y_pts_E1.push_back(saida);\par
  110     \}\par
  111     for (t = 0; t <= periodo; t = t + ((2 * pi) / (W * 100))) \{\par
  112         fasor = Er.get_valor();\par
  113         saida = abs(fasor) * exp(B*t)*cos(W*t + arg(fasor));\par
  114         x_pts_Er.push_back(t);\par
  115         y_pts_Er.push_back(saida);\par
  116     \}\par
  117     for (t = 0; t <= periodo; t = t + ((2 * pi) / (W * 100))) \{\par
  118         fasor = Ec.get_valor();\par
  119         saida = abs(fasor) * exp(B*t)*cos(W*t + arg(fasor));\par
  120         x_pts_Ec.push_back(t);\par
  121         y_pts_Ec.push_back(saida);\par
  122     \}\par
  123     for (t = 0; t <= periodo; t = t + ((2 * pi) / (W * 100))) \{\par
  124         fasor = Ei.get_valor();\par
  125         saida = abs(fasor) * exp(B*t)*cos(W*t + arg(fasor));\par
  126         x_pts_Ei.push_back(t);\par
  127         y_pts_Ei.push_back(saida);\par
  128     \}\par
  129 \par
  130     MainWindow::makePlot();\par
  131 \par
  132 \}\par
}
}
{\xe \v removeAllGraphs\:MainWindow}
{\xe \v MainWindow\:removeAllGraphs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::removeAllGraphs (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   263 \{\par
  264   ui->customPlot->clearGraphs();\par
  265   ui->customPlot->replot();\par
  266 \}\par
}
}
{\xe \v removeSelectedGraph\:MainWindow}
{\xe \v MainWindow\:removeSelectedGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::removeSelectedGraph (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   255 \{\par
  256   if (ui->customPlot->selectedGraphs().size() > 0)\par
  257   \{\par
  258     ui->customPlot->removeGraph(ui->customPlot->selectedGraphs().first());\par
  259     ui->customPlot->replot();\par
  260   \}\par
  261 \}\par
}
}
{\xe \v selectionChanged\:MainWindow}
{\xe \v MainWindow\:selectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::selectionChanged (){\f2 [private]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   292 \{\par
  293   // synchronize selection of graphs with selection of corresponding legend items:\par
  294   for (int i=0; i<ui->customPlot->graphCount(); ++i)\par
  295   \{\par
  296     QCPGraph *graph = ui->customPlot->graph(i);\par
  297     QCPPlottableLegendItem *item = ui->customPlot->legend->itemWithPlottable(graph);\par
  298     if (item->selected() || graph->selected())\par
  299     \{\par
  300       item->setSelected(true);\par
  301       graph->setSelection(QCPDataSelection(graph->data()->dataRange()));\par
  302     \}\par
  303   \}\par
  304 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v ui\:MainWindow}
{\xe \v MainWindow\:ui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ui::MainWindow* MainWindow::ui{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documentação para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b mainwindow.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b mainwindow.cpp}\par
}}