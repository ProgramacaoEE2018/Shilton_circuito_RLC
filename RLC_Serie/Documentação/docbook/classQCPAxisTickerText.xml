<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="classQCPAxisTickerText">
<title>QCPAxisTickerText class Reference</title>
<para>
    <programlisting>#include <link linkend="qcustomplot_8h">&lt;qcustomplot.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for QCPAxisTickerText</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classQCPAxisTickerText__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for QCPAxisTickerText</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="classQCPAxisTickerText__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Atributos Protegidos</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>QMap&lt; double, QString &gt; mTicks</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int mSubTickCount</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>TickStepStrategy mTickStepStrategy</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int mTickCount</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double mTickOrigin</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="classQCPAxisTickerText_1a1d7243b1256c1aa9d1d5b99b2e84e648">QCPAxisTickerText</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>QMap&lt; double, QString &gt; &amp; <link linkend="classQCPAxisTickerText_1ac84622a6bb4f2a98474e185ecaf3189a">ticks</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="classQCPAxisTickerText_1a5c3c59e8fdf4c96568dd50d4a653e791">subTickCount</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classQCPAxisTickerText_1a8cdf1f21940f1f53f5e3d30b2c74f5cf">setTicks</link> (
const QMap&lt; double, QString &gt; &amp; ticks)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classQCPAxisTickerText_1a69f3898cc1cf11d2437851f959faa1e8">setTicks</link> (
const QVector&lt; double &gt; &amp; positions, const QVector&lt; QString &gt; labels)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classQCPAxisTickerText_1a8cfa50c51183c90186892eeef978d571">setSubTickCount</link> (
int subTicks)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classQCPAxisTickerText_1a21826d2fcd9a25c194d34d4f67aa1460">clear</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classQCPAxisTickerText_1aada3db69e5fc6585aaa4ea5d89552eb0">addTick</link> (
double position, QString label)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classQCPAxisTickerText_1aba34051300eecaefbedb2df8feff2d45">addTicks</link> (
const QMap&lt; double, QString &gt; &amp; ticks)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classQCPAxisTickerText_1a8140c730e20b0050e1b702af3db00b2e">addTicks</link> (
const QVector&lt; double &gt; &amp; positions, const QVector&lt; QString &gt; &amp; labels)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="classQCPAxisTicker_1ab6d2f9d9477821623ac9bc4b21ddf49a">TickStepStrategy</link> <link linkend="classQCPAxisTicker_1a58df76f2ec3eb48401bdd314b0e14ba1">tickStepStrategy</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="classQCPAxisTicker_1aaf9edbe4169ce55e216fd067cc139452">tickCount</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="classQCPAxisTicker_1ac0c6e9587c36fdeefb5518c00fe7ab15">tickOrigin</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classQCPAxisTicker_1a73b1d847c1a12159af6bfda4ebebe7d5">setTickStepStrategy</link> (
<link linkend="classQCPAxisTicker_1ab6d2f9d9477821623ac9bc4b21ddf49a">TickStepStrategy</link> strategy)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classQCPAxisTicker_1a47752abba8293e6dc18491501ae34008">setTickCount</link> (
int count)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classQCPAxisTicker_1ab509c7e500293bf66a8409f0d7c23943">setTickOrigin</link> (
double origin)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="classQCPAxisTicker_1aefbd11725678ca824add8cf926cbc856">generate</link> (
const <link linkend="classQCPRange">QCPRange</link> &amp; range, const QLocale &amp; locale, QChar formatChar, int precision, QVector&lt; double &gt; &amp; ticks, QVector&lt; double &gt; * subTicks, QVector&lt; QString &gt; * tickLabels)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual double <link linkend="classQCPAxisTickerText_1a628f16c41905e8c95c6622d6757a38c4">getTickStep</link> (
const <link linkend="classQCPRange">QCPRange</link> &amp; range)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual int <link linkend="classQCPAxisTickerText_1a9c2488b877776870239abda4c8106052">getSubTickCount</link> (
double tickStep)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual QString <link linkend="classQCPAxisTickerText_1a99247779a9c20bea1f50911117540a71">getTickLabel</link> (
double tick, const QLocale &amp; locale, QChar formatChar, int precision)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual QVector&lt; double &gt; <link linkend="classQCPAxisTickerText_1aa195c4fd0364d0393f1798fb495d6a60">createTickVector</link> (
double tickStep, const <link linkend="classQCPRange">QCPRange</link> &amp; range)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual QVector&lt; double &gt; <link linkend="classQCPAxisTicker_1a9a6435723fa0bd366d1ea4c2cff7c33f">createSubTickVector</link> (
int subTickCount, const QVector&lt; double &gt; &amp; ticks)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual QVector&lt; QString &gt; <link linkend="classQCPAxisTicker_1a804050e408f37a0b9770c6654ebe6aa7">createLabelVector</link> (
const QVector&lt; double &gt; &amp; ticks, const QLocale &amp; locale, QChar formatChar, int precision)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="classQCPAxisTicker_1ab28cc1ab549489be7975f5ce7e717916">trimTicks</link> (
const <link linkend="classQCPRange">QCPRange</link> &amp; range, QVector&lt; double &gt; &amp; ticks, bool keepOneOutlier)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="classQCPAxisTicker_1a4ea0a7c4ca1c610f92b9bd5944ab4260">pickClosest</link> (
double target, const QVector&lt; double &gt; &amp; candidates)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="classQCPAxisTicker_1a2f1e223bafbf2cec7c3ba8b08d5c77e8">getMantissa</link> (
double input, double * magnitude)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="classQCPAxisTicker_1ac7df6c72876b7abd67c932663a0b0f6a">cleanMantissa</link> (
double input)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para><literallayout>enum <link linkend="classQCPAxisTicker_1ab6d2f9d9477821623ac9bc4b21ddf49a">TickStepStrategy</link> {
<link linkend="classQCPAxisTicker_1ab6d2f9d9477821623ac9bc4b21ddf49aa9002aa2fd5633ab5556c71a26fed63a8">tssReadability</link>,
<link linkend="classQCPAxisTicker_1ab6d2f9d9477821623ac9bc4b21ddf49aa770312b6b9b0c64a37ceeba96e0cd7f2">tssMeetTickCount</link>
}</literallayout>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>Specialized axis ticker which allows arbitrary labels at specified coordinates. </para>
    </simplesect>
        <simplesect>
            <title>Descrição detalhada</title>

<para></para>

<para>This <link linkend="classQCPAxisTicker">QCPAxisTicker</link> subclass generates ticks which can be directly specified by the user as coordinates and associated strings. They can be passed as a whole with <link linkend="classQCPAxisTickerText_1a8cdf1f21940f1f53f5e3d30b2c74f5cf">setTicks</link> or one at a time with <link linkend="classQCPAxisTickerText_1aada3db69e5fc6585aaa4ea5d89552eb0">addTick</link>. Alternatively you can directly access the internal storage via <link linkend="classQCPAxisTickerText_1ac84622a6bb4f2a98474e185ecaf3189a">ticks</link> and modify the tick/label data there.</para>

<para>This is useful for cases where the axis represents categories rather than numerical values.</para>

<para>If you are updating the ticks of this ticker regularly and in a dynamic fasion (e.g. dependent on the axis range), it is a sign that you should probably create an own ticker by subclassing <link linkend="classQCPAxisTicker">QCPAxisTicker</link>, instead of using this one.</para>

<para>The ticker can be created and assigned to an axis like this: <literallayout><computeroutput></computeroutput></literallayout></para>
                <para>Definition at line 1730 of file qcustomplot.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>qcustomplot.h</para></listitem></itemizedlist></para>
        </simplesect>
        <section>
            <title>Atributos</title>
        </section>
            <section xml:id="classQCPAxisTickerText_1a1d7243b1256c1aa9d1d5b99b2e84e648">
                <title>QCPAxisTickerText::QCPAxisTickerText ()</title> <emphasis></emphasis>
                
<para>Constructs the ticker and sets reasonable default values. Axis tickers are commonly created managed by a QSharedPointer, which then can be passed to <link linkend="classQCPAxis_1a4ee03fcd2c74d05cd1a419b9af5cfbdc">QCPAxis::setTicker</link>. </para>

            </section>
            <section xml:id="classQCPAxisTickerText_1ac84622a6bb4f2a98474e185ecaf3189a">
                <title>QMap&lt; double, QString &gt; &amp; QCPAxisTickerText::ticks ()</title> <emphasis></emphasis>
                
<para>Returns a non-const reference to the internal map which stores the tick coordinates and their labels.</para>

<para>You can access the map directly in order to add, remove or manipulate ticks, as an alternative to using the methods provided by <link linkend="classQCPAxisTickerText">QCPAxisTickerText</link>, such as <link linkend="classQCPAxisTickerText_1a8cdf1f21940f1f53f5e3d30b2c74f5cf">setTicks</link> and <link linkend="classQCPAxisTickerText_1aada3db69e5fc6585aaa4ea5d89552eb0">addTick</link>. </para>

            </section>
            <section xml:id="classQCPAxisTickerText_1a5c3c59e8fdf4c96568dd50d4a653e791">
                <title>int QCPAxisTickerText::subTickCount () const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classQCPAxisTickerText_1a8cdf1f21940f1f53f5e3d30b2c74f5cf">
                <title>void QCPAxisTickerText::setTicks (const QMap&lt; double, QString &gt; &amp;ticks)</title> <emphasis></emphasis>
                
<para>Esse é um método provido por conveniência. Ele difere do método acima apenas na lista de argumentos que devem ser utilizados.</para>

<para>Sets the ticks that shall appear on the axis. The map key of <emphasis>ticks</emphasis> corresponds to the axis coordinate, and the map value is the string that will appear as tick label.</para>

<para>An alternative to manipulate ticks is to directly access the internal storage with the <link linkend="classQCPAxisTickerText_1ac84622a6bb4f2a98474e185ecaf3189a">ticks</link> getter.</para>

<para><formalpara><title>Veja também: </title>

<para><link linkend="classQCPAxisTickerText_1aba34051300eecaefbedb2df8feff2d45">addTicks</link>, <link linkend="classQCPAxisTickerText_1aada3db69e5fc6585aaa4ea5d89552eb0">addTick</link>, <link linkend="classQCPAxisTickerText_1a21826d2fcd9a25c194d34d4f67aa1460">clear</link> </para>
</formalpara>
</para>

            </section>
            <section xml:id="classQCPAxisTickerText_1a69f3898cc1cf11d2437851f959faa1e8">
                <title>void QCPAxisTickerText::setTicks (const QVector&lt; double &gt; &amp;positions, const QVector&lt; QString &gt; labels)</title> <emphasis></emphasis>
                
<para>Esse é um método provido por conveniência. Ele difere do método acima apenas na lista de argumentos que devem ser utilizados.</para>

<para>Sets the ticks that shall appear on the axis. The entries of <emphasis>positions</emphasis> correspond to the axis coordinates, and the entries of <emphasis>labels</emphasis> are the respective strings that will appear as tick labels.</para>

<para><formalpara><title>Veja também: </title>

<para><link linkend="classQCPAxisTickerText_1aba34051300eecaefbedb2df8feff2d45">addTicks</link>, <link linkend="classQCPAxisTickerText_1aada3db69e5fc6585aaa4ea5d89552eb0">addTick</link>, <link linkend="classQCPAxisTickerText_1a21826d2fcd9a25c194d34d4f67aa1460">clear</link> </para>
</formalpara>
</para>

            </section>
            <section xml:id="classQCPAxisTickerText_1a8cfa50c51183c90186892eeef978d571">
                <title>void QCPAxisTickerText::setSubTickCount (int subTicks)</title> <emphasis></emphasis>
                
<para>Sets the number of sub ticks that shall appear between ticks. For <link linkend="classQCPAxisTickerText">QCPAxisTickerText</link>, there is no automatic sub tick count calculation. So if sub ticks are needed, they must be configured with this method. </para>

            </section>
            <section xml:id="classQCPAxisTickerText_1a21826d2fcd9a25c194d34d4f67aa1460">
                <title>void QCPAxisTickerText::clear ()</title> <emphasis></emphasis>
                
<para>Clears all ticks.</para>

<para>An alternative to manipulate ticks is to directly access the internal storage with the <link linkend="classQCPAxisTickerText_1ac84622a6bb4f2a98474e185ecaf3189a">ticks</link> getter.</para>

<para><formalpara><title>Veja também: </title>

<para><link linkend="classQCPAxisTickerText_1a8cdf1f21940f1f53f5e3d30b2c74f5cf">setTicks</link>, <link linkend="classQCPAxisTickerText_1aba34051300eecaefbedb2df8feff2d45">addTicks</link>, <link linkend="classQCPAxisTickerText_1aada3db69e5fc6585aaa4ea5d89552eb0">addTick</link> </para>
</formalpara>
</para>

            </section>
            <section xml:id="classQCPAxisTickerText_1aada3db69e5fc6585aaa4ea5d89552eb0">
                <title>void QCPAxisTickerText::addTick (double position, QString label)</title> <emphasis></emphasis>
                
<para>Adds a single tick to the axis at the given axis coordinate <emphasis>position</emphasis>, with the provided tick <emphasis>label</emphasis>.</para>

<para><formalpara><title>Veja também: </title>

<para><link linkend="classQCPAxisTickerText_1aba34051300eecaefbedb2df8feff2d45">addTicks</link>, <link linkend="classQCPAxisTickerText_1a8cdf1f21940f1f53f5e3d30b2c74f5cf">setTicks</link>, <link linkend="classQCPAxisTickerText_1a21826d2fcd9a25c194d34d4f67aa1460">clear</link> </para>
</formalpara>
</para>

            </section>
            <section xml:id="classQCPAxisTickerText_1aba34051300eecaefbedb2df8feff2d45">
                <title>void QCPAxisTickerText::addTicks (const QMap&lt; double, QString &gt; &amp;ticks)</title> <emphasis></emphasis>
                
<para>Esse é um método provido por conveniência. Ele difere do método acima apenas na lista de argumentos que devem ser utilizados.</para>

<para>Adds the provided <emphasis>ticks</emphasis> to the ones already existing. The map key of <emphasis>ticks</emphasis> corresponds to the axis coordinate, and the map value is the string that will appear as tick label.</para>

<para>An alternative to manipulate ticks is to directly access the internal storage with the <link linkend="classQCPAxisTickerText_1ac84622a6bb4f2a98474e185ecaf3189a">ticks</link> getter.</para>

<para><formalpara><title>Veja também: </title>

<para><link linkend="classQCPAxisTickerText_1aada3db69e5fc6585aaa4ea5d89552eb0">addTick</link>, <link linkend="classQCPAxisTickerText_1a8cdf1f21940f1f53f5e3d30b2c74f5cf">setTicks</link>, <link linkend="classQCPAxisTickerText_1a21826d2fcd9a25c194d34d4f67aa1460">clear</link> </para>
</formalpara>
</para>

            </section>
            <section xml:id="classQCPAxisTickerText_1a8140c730e20b0050e1b702af3db00b2e">
                <title>void QCPAxisTickerText::addTicks (const QVector&lt; double &gt; &amp;positions, const QVector&lt; QString &gt; &amp;labels)</title> <emphasis></emphasis>
                
<para>Esse é um método provido por conveniência. Ele difere do método acima apenas na lista de argumentos que devem ser utilizados.</para>

<para>Adds the provided ticks to the ones already existing. The entries of <emphasis>positions</emphasis> correspond to the axis coordinates, and the entries of <emphasis>labels</emphasis> are the respective strings that will appear as tick labels.</para>

<para>An alternative to manipulate ticks is to directly access the internal storage with the <link linkend="classQCPAxisTickerText_1ac84622a6bb4f2a98474e185ecaf3189a">ticks</link> getter.</para>

<para><formalpara><title>Veja também: </title>

<para><link linkend="classQCPAxisTickerText_1aada3db69e5fc6585aaa4ea5d89552eb0">addTick</link>, <link linkend="classQCPAxisTickerText_1a8cdf1f21940f1f53f5e3d30b2c74f5cf">setTicks</link>, <link linkend="classQCPAxisTickerText_1a21826d2fcd9a25c194d34d4f67aa1460">clear</link> </para>
</formalpara>
</para>

            </section>
            <section xml:id="classQCPAxisTicker_1a58df76f2ec3eb48401bdd314b0e14ba1">
                <title>TickStepStrategy QCPAxisTicker::tickStepStrategy () const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classQCPAxisTicker_1aaf9edbe4169ce55e216fd067cc139452">
                <title>int QCPAxisTicker::tickCount () const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classQCPAxisTicker_1ac0c6e9587c36fdeefb5518c00fe7ab15">
                <title>double QCPAxisTicker::tickOrigin () const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classQCPAxisTicker_1a73b1d847c1a12159af6bfda4ebebe7d5">
                <title>void QCPAxisTicker::setTickStepStrategy (TickStepStrategy strategy)</title> <emphasis></emphasis>
                
<para>Sets which strategy the axis ticker follows when choosing the size of the tick step. For the available strategies, see <link linkend="classQCPAxisTicker_1ab6d2f9d9477821623ac9bc4b21ddf49a">TickStepStrategy</link>. </para>

            </section>
            <section xml:id="classQCPAxisTicker_1a47752abba8293e6dc18491501ae34008">
                <title>void QCPAxisTicker::setTickCount (int count)</title> <emphasis></emphasis>
                
<para>Sets how many ticks this ticker shall aim to generate across the axis range. Note that <emphasis>count</emphasis> is not guaranteed to be matched exactly, as generating readable tick intervals may conflict with the requested number of ticks.</para>

<para>Whether the readability has priority over meeting the requested <emphasis>count</emphasis> can be specified with <link linkend="classQCPAxisTicker_1a73b1d847c1a12159af6bfda4ebebe7d5">setTickStepStrategy</link>. </para>

            </section>
            <section xml:id="classQCPAxisTicker_1ab509c7e500293bf66a8409f0d7c23943">
                <title>void QCPAxisTicker::setTickOrigin (double origin)</title> <emphasis></emphasis>
                
<para>Sets the mathematical coordinate (or &quot;offset&quot;) of the zeroth tick. This tick coordinate is just a concept and doesn&apos;t need to be inside the currently visible axis range.</para>

<para>By default <emphasis>origin</emphasis> is zero, which for example yields ticks {-5, 0, 5, 10, 15,...} when the tick step is five. If <emphasis>origin</emphasis> is now set to 1 instead, the correspondingly generated ticks would be {-4, 1, 6, 11, 16,...}. </para>

            </section>
            <section xml:id="classQCPAxisTicker_1aefbd11725678ca824add8cf926cbc856">
                <title>void QCPAxisTicker::generate (const QCPRange &amp;range, const QLocale &amp;locale, QChar formatChar, int precision, QVector&lt; double &gt; &amp;ticks, QVector&lt; double &gt; *subTicks, QVector&lt; QString &gt; *tickLabels)</title> <emphasis></emphasis>
                
<para>This is the method called by <link linkend="classQCPAxis">QCPAxis</link> in order to actually generate tick coordinates (<emphasis>ticks</emphasis>), tick label strings (<emphasis>tickLabels</emphasis>) and sub tick coordinates (<emphasis>subTicks</emphasis>).</para>

<para>The ticks are generated for the specified <emphasis>range</emphasis>. The generated labels typically follow the specified <emphasis>locale</emphasis>, <emphasis>formatChar</emphasis> and number <emphasis>precision</emphasis>, however this might be different (or even irrelevant) for certain <link linkend="classQCPAxisTicker">QCPAxisTicker</link> subclasses.</para>

<para>The output parameter <emphasis>ticks</emphasis> is filled with the generated tick positions in axis coordinates. The output parameters <emphasis>subTicks</emphasis> and <emphasis>tickLabels</emphasis> are optional (set them to 0 if not needed) and are respectively filled with sub tick coordinates, and tick label strings belonging to <emphasis>ticks</emphasis> by index. </para>

            </section>
            <section xml:id="classQCPAxisTickerText_1a628f16c41905e8c95c6622d6757a38c4">
                <title>double QCPAxisTickerText::getTickStep (const QCPRange &amp;range) Q_DECL_OVERRIDE</title> <emphasis></emphasis>
                
<para>Since the tick coordinates are provided externally, this method implementation does nothing.</para>

            </section>
            <section xml:id="classQCPAxisTickerText_1a9c2488b877776870239abda4c8106052">
                <title>int QCPAxisTickerText::getSubTickCount (double tickStep) Q_DECL_OVERRIDE</title> <emphasis></emphasis>
                
<para>Returns the sub tick count that was configured with <link linkend="classQCPAxisTickerText_1a8cfa50c51183c90186892eeef978d571">setSubTickCount</link>.</para>

            </section>
            <section xml:id="classQCPAxisTickerText_1a99247779a9c20bea1f50911117540a71">
                <title>QString QCPAxisTickerText::getTickLabel (double tick, const QLocale &amp;locale, QChar formatChar, int precision) Q_DECL_OVERRIDE</title> <emphasis></emphasis>
                
<para>Returns the tick label which corresponds to the key <emphasis>tick</emphasis> in the internal tick storage. Since the labels are provided externally, <emphasis>locale</emphasis>, <emphasis>formatChar</emphasis>, and <emphasis>precision</emphasis> are ignored.</para>

            </section>
            <section xml:id="classQCPAxisTickerText_1aa195c4fd0364d0393f1798fb495d6a60">
                <title>QVector&lt; double &gt; QCPAxisTickerText::createTickVector (double tickStep, const QCPRange &amp;range) Q_DECL_OVERRIDE</title> <emphasis></emphasis>
                
<para>Returns the externally provided tick coordinates which are in the specified <emphasis>range</emphasis>. If available, one tick above and below the range is provided in addition, to allow possible sub tick calculation. The parameter <emphasis>tickStep</emphasis> is ignored.</para>

            </section>
            <section xml:id="classQCPAxisTicker_1a9a6435723fa0bd366d1ea4c2cff7c33f">
                <title>QVector&lt; double &gt; QCPAxisTicker::createSubTickVector (int subTickCount, const QVector&lt; double &gt; &amp;ticks)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classQCPAxisTicker_1a804050e408f37a0b9770c6654ebe6aa7">
                <title>QVector&lt; QString &gt; QCPAxisTicker::createLabelVector (const QVector&lt; double &gt; &amp;ticks, const QLocale &amp;locale, QChar formatChar, int precision)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classQCPAxisTicker_1ab28cc1ab549489be7975f5ce7e717916">
                <title>void QCPAxisTicker::trimTicks (const QCPRange &amp;range, QVector&lt; double &gt; &amp;ticks, bool keepOneOutlier) const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classQCPAxisTicker_1a4ea0a7c4ca1c610f92b9bd5944ab4260">
                <title>double QCPAxisTicker::pickClosest (double target, const QVector&lt; double &gt; &amp;candidates) const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classQCPAxisTicker_1a2f1e223bafbf2cec7c3ba8b08d5c77e8">
                <title>double QCPAxisTicker::getMantissa (double input, double *magnitude=0) const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classQCPAxisTicker_1ac7df6c72876b7abd67c932663a0b0f6a">
                <title>double QCPAxisTicker::cleanMantissa (double input) const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="classQCPAxisTicker_1ab6d2f9d9477821623ac9bc4b21ddf49a">
               <title>enum TickStepStrategy </title>
               
<para>Defines the strategies that the axis ticker may follow when choosing the size of the tick step.</para>

<para><formalpara><title>Veja também: </title>

<para><link linkend="classQCPAxisTicker_1a73b1d847c1a12159af6bfda4ebebe7d5">setTickStepStrategy</link> </para>
</formalpara>
</para>

               <formalpara>
                    <title>Enumeradores:</title>
                    <variablelist>
                        <varlistentry xml:id="classQCPAxisTicker_1ab6d2f9d9477821623ac9bc4b21ddf49aa9002aa2fd5633ab5556c71a26fed63a8">
                            <term>tssReadability</term>
                            <listitem>
                                <para>A nicely readable tick step is prioritized over matching the requested number of ticks (see \ref setTickCount)</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="classQCPAxisTicker_1ab6d2f9d9477821623ac9bc4b21ddf49aa770312b6b9b0c64a37ceeba96e0cd7f2">
                            <term>tssMeetTickCount</term>
                            <listitem>
                                <para>Less readable tick steps are allowed which in turn facilitates getting closer to the requested tick count.</para>
                            </listitem>
                        </varlistentry>
                     </variablelist>
                </formalpara>
                <para>Definition at line 1543 of file qcustomplot.h
                    <computeroutput><literallayout>
{
tssReadability, 
tssMeetTickCount, 
}TickStepStrategy;
                    </literallayout></computeroutput>
                </para>
            </section>
</section>
