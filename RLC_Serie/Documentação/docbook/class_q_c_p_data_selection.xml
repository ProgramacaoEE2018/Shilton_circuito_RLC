<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="class_q_c_p_data_selection">
<title>QCPDataSelection class Reference</title>
<para>
    <programlisting>#include <link linkend="qcustomplot_8h">&lt;qcustomplot.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for QCPDataSelection</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_q_c_p_data_selection__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for QCPDataSelection</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_q_c_p_data_selection__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>QList&lt; QCPDataRange &gt; mDataRanges</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d">QCPDataSelection</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_q_c_p_data_selection_1a738dfb4f5718c5df5ed35ea33ac37818">QCPDataSelection</link> (
const <link linkend="class_q_c_p_data_range">QCPDataRange</link> &amp; range)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_q_c_p_data_selection_1a664fa566569b17148abafd6b1dbbf347">operator==</link> (
const <link linkend="class_q_c_p_data_selection">QCPDataSelection</link> &amp; other)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_q_c_p_data_selection_1a8324733cc88660ee4792ee60d6a4520c">operator!=</link> (
const <link linkend="class_q_c_p_data_selection">QCPDataSelection</link> &amp; other)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_q_c_p_data_selection">QCPDataSelection</link> &amp; <link linkend="class_q_c_p_data_selection_1a4584d4b0ea5c4f095bd7b70f88eb5d9d">operator+=</link> (
const <link linkend="class_q_c_p_data_selection">QCPDataSelection</link> &amp; other)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_q_c_p_data_selection">QCPDataSelection</link> &amp; <link linkend="class_q_c_p_data_selection_1a17058640d4e6f49984a0e7e42043df1b">operator+=</link> (
const <link linkend="class_q_c_p_data_range">QCPDataRange</link> &amp; other)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_q_c_p_data_selection">QCPDataSelection</link> &amp; <link linkend="class_q_c_p_data_selection_1a66f9fab70b026baa64bf8e52fe5de07e">operator-=</link> (
const <link linkend="class_q_c_p_data_selection">QCPDataSelection</link> &amp; other)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_q_c_p_data_selection">QCPDataSelection</link> &amp; <link linkend="class_q_c_p_data_selection_1a8d18b20d20dde737eefc10967e31cf73">operator-=</link> (
const <link linkend="class_q_c_p_data_range">QCPDataRange</link> &amp; other)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="class_q_c_p_data_selection_1abd8869ccb231ab991e8576de931f647d">dataRangeCount</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="class_q_c_p_data_selection_1ac9e74dd294778aa799216c3435c9c4f0">dataPointCount</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_q_c_p_data_range">QCPDataRange</link> <link linkend="class_q_c_p_data_selection_1a6956acf6a9a49a353b4f9b58608978ad">dataRange</link> (
int index)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>QList&lt; <link linkend="class_q_c_p_data_range">QCPDataRange</link> &gt; <link linkend="class_q_c_p_data_selection_1ac3b1c5e7713d380cd9e447f4556b94da">dataRanges</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_q_c_p_data_range">QCPDataRange</link> <link linkend="class_q_c_p_data_selection_1a890f9291e0b7f065747040de5d68ff7d">span</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_q_c_p_data_selection_1a46740c5aa7b80ae9b2abf6985d61b74f">addDataRange</link> (
const <link linkend="class_q_c_p_data_range">QCPDataRange</link> &amp; dataRange, bool simplify)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_q_c_p_data_selection_1a385dd665e6690d39afb8bbd727b1e00b">clear</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_q_c_p_data_selection_1a7f7526b475998dc0c3d6c376b24736c9">isEmpty</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4">simplify</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_q_c_p_data_selection_1a17b84d852911531d229f4a76aa239a75">enforceType</link> (
<link linkend="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038">QCP::SelectionType</link> type)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_q_c_p_data_selection_1ab1ad3d5bbb55749c3f7ab1e45429c932">contains</link> (
const <link linkend="class_q_c_p_data_selection">QCPDataSelection</link> &amp; other)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_q_c_p_data_selection">QCPDataSelection</link> <link linkend="class_q_c_p_data_selection_1af5267ced53687561367105ee77b874ab">intersection</link> (
const <link linkend="class_q_c_p_data_range">QCPDataRange</link> &amp; other)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_q_c_p_data_selection">QCPDataSelection</link> <link linkend="class_q_c_p_data_selection_1af296ec5a948656c1d1ecb7b2970d2a24">intersection</link> (
const <link linkend="class_q_c_p_data_selection">QCPDataSelection</link> &amp; other)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_q_c_p_data_selection">QCPDataSelection</link> <link linkend="class_q_c_p_data_selection_1ae8097f4e4ffee7b1b5df27c93eb365db">inverse</link> (
const <link linkend="class_q_c_p_data_range">QCPDataRange</link> &amp; outerRange)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static bool <link linkend="class_q_c_p_data_selection_1a6f171526f5441482568ff5e22e6af2c6">lessThanDataRangeBegin</link> (
const <link linkend="class_q_c_p_data_range">QCPDataRange</link> &amp; a, const <link linkend="class_q_c_p_data_range">QCPDataRange</link> &amp; b)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>QDebug <link linkend="class_q_c_p_data_selection_1aed65b8988afe6b03adeadf5edf663670">operator&lt;&lt;</link> (
QDebug d, const <link linkend="class_q_c_p_data_selection">QCPDataSelection</link> &amp; selection)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>Describes a data set by holding multiple <link linkend="class_q_c_p_data_range">QCPDataRange</link> instances. </para>
    </simplesect>
        <simplesect>
            <title>Detailed Description</title>

<para><link linkend="class_q_c_p_data_selection">QCPDataSelection</link> manages multiple instances of <link linkend="class_q_c_p_data_range">QCPDataRange</link> in order to represent any (possibly disjoint) set of data selection.</para>

<para>The data selection can be modified with addition and subtraction operators which take <link linkend="class_q_c_p_data_selection">QCPDataSelection</link> and <link linkend="class_q_c_p_data_range">QCPDataRange</link> instances, as well as methods such as <link linkend="class_q_c_p_data_selection_1a46740c5aa7b80ae9b2abf6985d61b74f">addDataRange</link> and <link linkend="class_q_c_p_data_selection_1a385dd665e6690d39afb8bbd727b1e00b">clear</link>. Read access is provided by <link linkend="class_q_c_p_data_selection_1a6956acf6a9a49a353b4f9b58608978ad">dataRange</link>, <link linkend="class_q_c_p_data_selection_1ac3b1c5e7713d380cd9e447f4556b94da">dataRanges</link>, <link linkend="class_q_c_p_data_selection_1abd8869ccb231ab991e8576de931f647d">dataRangeCount</link>, etc.</para>

<para>The method <link linkend="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4">simplify</link> is used to join directly adjacent or even overlapping <link linkend="class_q_c_p_data_range">QCPDataRange</link> instances. <link linkend="class_q_c_p_data_selection">QCPDataSelection</link> automatically simplifies when using the addition/subtraction operators. The only case when <link linkend="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4">simplify</link> is left to the user, is when calling <link linkend="class_q_c_p_data_selection_1a46740c5aa7b80ae9b2abf6985d61b74f">addDataRange</link>, with the parameter <emphasis>simplify</emphasis> explicitly set to false. This is useful if many data ranges will be added to the selection successively and the overhead for simplifying after each iteration shall be avoided. In this case, you should make sure to call <link linkend="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4">simplify</link> after completing the operation.</para>

<para>Use <link linkend="class_q_c_p_data_selection_1a17b84d852911531d229f4a76aa239a75">enforceType</link> to bring the data selection into a state complying with the constraints for selections defined in <link linkend="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038">QCP::SelectionType</link>.</para>

<para>QCustomPlot&apos;s data selection mechanism is based on <link linkend="class_q_c_p_data_selection">QCPDataSelection</link> and <link linkend="class_q_c_p_data_range">QCPDataRange</link>.</para>
<section xml:id="class_q_c_p_data_selection_1qcpdataselection-iterating">
<title>Iterating over a data selection</title>

<para>As an example, the following code snippet calculates the average value of a graph&apos;s data <link linkend="class_q_c_p_abstract_plottable_1a040bf09f41d456284cfd39cc37aa068f">selection</link>:</para>

<para><literallayout><computeroutput></computeroutput></literallayout></para>
</section>
                <para>Definition at line 928 of file qcustomplot.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>qcustomplot.h</para></listitem></itemizedlist></para>
        </simplesect>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="class_q_c_p_data_selection_1a0e0b7faaec7df1a7c77dd6f4883cdf0d">
                <title>QCPDataSelection::QCPDataSelection ()</title> <emphasis></emphasis>
                
<para>Creates an empty <link linkend="class_q_c_p_data_selection">QCPDataSelection</link>. </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a738dfb4f5718c5df5ed35ea33ac37818">
                <title>QCPDataSelection::QCPDataSelection (const QCPDataRange &amp;range)</title> <emphasis></emphasis>
                
<para>Creates a <link linkend="class_q_c_p_data_selection">QCPDataSelection</link> containing the provided <emphasis>range</emphasis>. </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a664fa566569b17148abafd6b1dbbf347">
                <title>bool QCPDataSelection::operator== (const QCPDataSelection &amp;other) const</title> <emphasis></emphasis>
                
<para>Returns true if this selection is identical (contains the same data ranges with the same begin and end indices) to <emphasis>other</emphasis>.</para>

<para>Note that both data selections must be in simplified state (the usual state of the selection, see <link linkend="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4">simplify</link>) for this operator to return correct results. </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a8324733cc88660ee4792ee60d6a4520c">
                <title>bool QCPDataSelection::operator!= (const QCPDataSelection &amp;other) const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_data_selection_1a4584d4b0ea5c4f095bd7b70f88eb5d9d">
                <title>QCPDataSelection &amp; QCPDataSelection::operator+= (const QCPDataSelection &amp;other)</title> <emphasis></emphasis>
                
<para>Adds the data selection of <emphasis>other</emphasis> to this data selection, and then simplifies this data selection (see <link linkend="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4">simplify</link>). </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a17058640d4e6f49984a0e7e42043df1b">
                <title>QCPDataSelection &amp; QCPDataSelection::operator+= (const QCPDataRange &amp;other)</title> <emphasis></emphasis>
                
<para>Adds the data range <emphasis>other</emphasis> to this data selection, and then simplifies this data selection (see <link linkend="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4">simplify</link>). </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a66f9fab70b026baa64bf8e52fe5de07e">
                <title>QCPDataSelection &amp; QCPDataSelection::operator-= (const QCPDataSelection &amp;other)</title> <emphasis></emphasis>
                
<para>Removes all data point indices that are described by <emphasis>other</emphasis> from this data selection. </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a8d18b20d20dde737eefc10967e31cf73">
                <title>QCPDataSelection &amp; QCPDataSelection::operator-= (const QCPDataRange &amp;other)</title> <emphasis></emphasis>
                
<para>Removes all data point indices that are described by <emphasis>other</emphasis> from this data selection. </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1abd8869ccb231ab991e8576de931f647d">
                <title>int QCPDataSelection::dataRangeCount () const</title> <emphasis></emphasis>
                
<para>Returns the number of ranges that make up the data selection. The ranges can be accessed by <link linkend="class_q_c_p_data_selection_1a6956acf6a9a49a353b4f9b58608978ad">dataRange</link> via their index.</para>

<para><formalpara><title>See also: </title>

<para><link linkend="class_q_c_p_data_selection_1a6956acf6a9a49a353b4f9b58608978ad">dataRange</link>, <link linkend="class_q_c_p_data_selection_1ac9e74dd294778aa799216c3435c9c4f0">dataPointCount</link> </para>
</formalpara>
</para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1ac9e74dd294778aa799216c3435c9c4f0">
                <title>int QCPDataSelection::dataPointCount () const</title> <emphasis></emphasis>
                
<para>Returns the total number of data points contained in all data ranges that make up this data selection. </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a6956acf6a9a49a353b4f9b58608978ad">
                <title>QCPDataRange QCPDataSelection::dataRange (int index=0) const</title> <emphasis></emphasis>
                
<para>Returns the data range with the specified <emphasis>index</emphasis>.</para>

<para>If the data selection is simplified (the usual state of the selection, see <link linkend="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4">simplify</link>), the ranges are sorted by ascending data point index.</para>

<para><formalpara><title>See also: </title>

<para><link linkend="class_q_c_p_data_selection_1abd8869ccb231ab991e8576de931f647d">dataRangeCount</link> </para>
</formalpara>
</para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1ac3b1c5e7713d380cd9e447f4556b94da">
                <title>QList&lt; QCPDataRange &gt; QCPDataSelection::dataRanges () const</title> <emphasis></emphasis>
                
<para>Returns all data ranges that make up the data selection. If the data selection is simplified (the usual state of the selection, see <link linkend="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4">simplify</link>), the ranges are sorted by ascending data point index.</para>

<para><formalpara><title>See also: </title>

<para><link linkend="class_q_c_p_data_selection_1a6956acf6a9a49a353b4f9b58608978ad">dataRange</link> </para>
</formalpara>
</para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a890f9291e0b7f065747040de5d68ff7d">
                <title>QCPDataRange QCPDataSelection::span () const</title> <emphasis></emphasis>
                
<para>Returns a <link linkend="class_q_c_p_data_range">QCPDataRange</link> which spans the entire data selection, including possible intermediate segments which are not part of the original data selection. </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a46740c5aa7b80ae9b2abf6985d61b74f">
                <title>void QCPDataSelection::addDataRange (const QCPDataRange &amp;dataRange, bool simplify=true)</title> <emphasis></emphasis>
                
<para>Adds the given <emphasis>dataRange</emphasis> to this data selection. This is equivalent to the += operator but allows disabling immediate simplification by setting <emphasis>simplify</emphasis> to false. This can improve performance if adding a very large amount of data ranges successively. In this case, make sure to call <link linkend="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4">simplify</link> manually, after the operation. </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a385dd665e6690d39afb8bbd727b1e00b">
                <title>void QCPDataSelection::clear ()</title> <emphasis></emphasis>
                
<para>Removes all data ranges. The data selection then contains no data points.</para>

<para><link linkend="class_q_c_p_data_selection_1a7f7526b475998dc0c3d6c376b24736c9">isEmpty</link> </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a7f7526b475998dc0c3d6c376b24736c9">
                <title>bool QCPDataSelection::isEmpty () const</title> <emphasis></emphasis>
                
<para>Returns true if there are no data ranges, and thus no data points, in this <link linkend="class_q_c_p_data_selection">QCPDataSelection</link> instance.</para>

<para><formalpara><title>See also: </title>

<para><link linkend="class_q_c_p_data_selection_1abd8869ccb231ab991e8576de931f647d">dataRangeCount</link> </para>
</formalpara>
</para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4">
                <title>void QCPDataSelection::simplify ()</title> <emphasis></emphasis>
                
<para>Sorts all data ranges by range begin index in ascending order, and then joins directly adjacent or overlapping ranges. This can reduce the number of individual data ranges in the selection, and prevents possible double-counting when iterating over the data points held by the data ranges.</para>

<para>This method is automatically called when using the addition/subtraction operators. The only case when <link linkend="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4">simplify</link> is left to the user, is when calling <link linkend="class_q_c_p_data_selection_1a46740c5aa7b80ae9b2abf6985d61b74f">addDataRange</link>, with the parameter <emphasis>simplify</emphasis> explicitly set to false. </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a17b84d852911531d229f4a76aa239a75">
                <title>void QCPDataSelection::enforceType (QCP::SelectionType type)</title> <emphasis></emphasis>
                
<para>Makes sure this data selection conforms to the specified <emphasis>type</emphasis> selection type. Before the type is enforced, <link linkend="class_q_c_p_data_selection_1a4a2fbad1a6e4d1dd26fdfdf88956f2a4">simplify</link> is called.</para>

<para>Depending on <emphasis>type</emphasis>, enforcing means adding new data points that were previously not part of the selection, or removing data points from the selection. If the current selection already conforms to <emphasis>type</emphasis>, the data selection is not changed.</para>

<para><formalpara><title>See also: </title>

<para><link linkend="namespace_q_c_p_1ac6cb9db26a564b27feda362a438db038">QCP::SelectionType</link> </para>
</formalpara>
</para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1ab1ad3d5bbb55749c3f7ab1e45429c932">
                <title>bool QCPDataSelection::contains (const QCPDataSelection &amp;other) const</title> <emphasis></emphasis>
                
<para>Returns true if the data selection <emphasis>other</emphasis> is contained entirely in this data selection, i.e. all data point indices that are in <emphasis>other</emphasis> are also in this data selection.</para>

<para><formalpara><title>See also: </title>

<para><link linkend="class_q_c_p_data_range_1a13ca398776374a3160aa85433718b812">QCPDataRange::contains</link> </para>
</formalpara>
</para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1af5267ced53687561367105ee77b874ab">
                <title>QCPDataSelection QCPDataSelection::intersection (const QCPDataRange &amp;other) const</title> <emphasis></emphasis>
                
<para>Returns a data selection containing the points which are both in this data selection and in the data range <emphasis>other</emphasis>.</para>

<para>A common use case is to limit an unknown data selection to the valid range of a data container, using <link linkend="class_q_c_p_data_container_1aece90eeb2ba8d3c46d3d94023630fbc7">QCPDataContainer::dataRange</link> as <emphasis>other</emphasis>. One can then safely iterate over the returned data selection without exceeding the data container&apos;s bounds. </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1af296ec5a948656c1d1ecb7b2970d2a24">
                <title>QCPDataSelection QCPDataSelection::intersection (const QCPDataSelection &amp;other) const</title> <emphasis></emphasis>
                
<para>Returns a data selection containing the points which are both in this data selection and in the data selection <emphasis>other</emphasis>. </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1ae8097f4e4ffee7b1b5df27c93eb365db">
                <title>QCPDataSelection QCPDataSelection::inverse (const QCPDataRange &amp;outerRange) const</title> <emphasis></emphasis>
                
<para>Returns a data selection which is the exact inverse of this data selection, with <emphasis>outerRange</emphasis> defining the base range on which to invert. If <emphasis>outerRange</emphasis> is smaller than the <link linkend="class_q_c_p_data_selection_1a890f9291e0b7f065747040de5d68ff7d">span</link> of this data selection, it is expanded accordingly.</para>

<para>For example, this method can be used to retrieve all unselected segments by setting <emphasis>outerRange</emphasis> to the full data range of the plottable, and calling this method on a data selection holding the selected segments. </para>

            </section>
            <section xml:id="class_q_c_p_data_selection_1a6f171526f5441482568ff5e22e6af2c6">
                <title>static bool QCPDataSelection::lessThanDataRangeBegin (const QCPDataRange &amp;a, const QCPDataRange &amp;b)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_data_selection_1aed65b8988afe6b03adeadf5edf663670">
                <title>QDebug operator&lt;&lt; (QDebug d, const QCPDataSelection &amp;selection)</title> <emphasis></emphasis>
                
<para>Prints <emphasis>selection</emphasis> in a human readable format to the qDebug output. </para>

            </section>
</section>
