<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="class_q_c_p_axis_ticker">
<title>QCPAxisTicker class Reference</title>
<para>
    <programlisting>#include <link linkend="qcustomplot_8h">&lt;qcustomplot.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for QCPAxisTicker</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_q_c_p_axis_ticker__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for QCPAxisTicker</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_q_c_p_axis_ticker__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para><literallayout>enum <link linkend="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49a">TickStepStrategy</link> {
<link linkend="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa9002aa2fd5633ab5556c71a26fed63a8">tssReadability</link>,
<link linkend="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa770312b6b9b0c64a37ceeba96e0cd7f2">tssMeetTickCount</link>
}</literallayout>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Protected Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>TickStepStrategy mTickStepStrategy</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int mTickCount</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double mTickOrigin</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_q_c_p_axis_ticker_1a8fcf23c79ebd72202fe79253f9f01ea8">QCPAxisTicker</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="class_q_c_p_axis_ticker_1a1119d6f09ad720f9c5dfdd2559047161">~QCPAxisTicker</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49a">TickStepStrategy</link> <link linkend="class_q_c_p_axis_ticker_1a58df76f2ec3eb48401bdd314b0e14ba1">tickStepStrategy</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="class_q_c_p_axis_ticker_1aaf9edbe4169ce55e216fd067cc139452">tickCount</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="class_q_c_p_axis_ticker_1ac0c6e9587c36fdeefb5518c00fe7ab15">tickOrigin</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_q_c_p_axis_ticker_1a73b1d847c1a12159af6bfda4ebebe7d5">setTickStepStrategy</link> (
<link linkend="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49a">TickStepStrategy</link> strategy)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_q_c_p_axis_ticker_1a47752abba8293e6dc18491501ae34008">setTickCount</link> (
int count)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_q_c_p_axis_ticker_1ab509c7e500293bf66a8409f0d7c23943">setTickOrigin</link> (
double origin)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_q_c_p_axis_ticker_1aefbd11725678ca824add8cf926cbc856">generate</link> (
const <link linkend="class_q_c_p_range">QCPRange</link> &amp; range, const QLocale &amp; locale, QChar formatChar, int precision, QVector&lt; double &gt; &amp; ticks, QVector&lt; double &gt; * subTicks, QVector&lt; QString &gt; * tickLabels)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual double <link linkend="class_q_c_p_axis_ticker_1a910d69bcec2de37e92d8d4e1ecf201e2">getTickStep</link> (
const <link linkend="class_q_c_p_range">QCPRange</link> &amp; range)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual int <link linkend="class_q_c_p_axis_ticker_1a4ccc403ced7a1457ce6ba293509933c8">getSubTickCount</link> (
double tickStep)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual QString <link linkend="class_q_c_p_axis_ticker_1a8201eb4aa8be192bf786b126eb5ee089">getTickLabel</link> (
double tick, const QLocale &amp; locale, QChar formatChar, int precision)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual QVector&lt; double &gt; <link linkend="class_q_c_p_axis_ticker_1af4645a824c7bd2ca8fc7e86ebf9055bd">createTickVector</link> (
double tickStep, const <link linkend="class_q_c_p_range">QCPRange</link> &amp; range)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual QVector&lt; double &gt; <link linkend="class_q_c_p_axis_ticker_1a9a6435723fa0bd366d1ea4c2cff7c33f">createSubTickVector</link> (
int subTickCount, const QVector&lt; double &gt; &amp; ticks)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual QVector&lt; QString &gt; <link linkend="class_q_c_p_axis_ticker_1a804050e408f37a0b9770c6654ebe6aa7">createLabelVector</link> (
const QVector&lt; double &gt; &amp; ticks, const QLocale &amp; locale, QChar formatChar, int precision)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_q_c_p_axis_ticker_1ab28cc1ab549489be7975f5ce7e717916">trimTicks</link> (
const <link linkend="class_q_c_p_range">QCPRange</link> &amp; range, QVector&lt; double &gt; &amp; ticks, bool keepOneOutlier)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="class_q_c_p_axis_ticker_1a4ea0a7c4ca1c610f92b9bd5944ab4260">pickClosest</link> (
double target, const QVector&lt; double &gt; &amp; candidates)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="class_q_c_p_axis_ticker_1a2f1e223bafbf2cec7c3ba8b08d5c77e8">getMantissa</link> (
double input, double * magnitude)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="class_q_c_p_axis_ticker_1ac7df6c72876b7abd67c932663a0b0f6a">cleanMantissa</link> (
double input)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>The base class tick generator used by <link linkend="class_q_c_p_axis">QCPAxis</link> to create tick positions and tick labels. </para>
    </simplesect>
        <simplesect>
            <title>Detailed Description</title>

<para>Each <link linkend="class_q_c_p_axis">QCPAxis</link> has an internal <link linkend="class_q_c_p_axis_ticker">QCPAxisTicker</link> (or a subclass) in order to generate tick positions and tick labels for the current axis range. The ticker of an axis can be set via <link linkend="class_q_c_p_axis_1a4ee03fcd2c74d05cd1a419b9af5cfbdc">QCPAxis::setTicker</link>. Since that method takes a <computeroutput>QSharedPointer&lt;QCPAxisTicker&gt;</computeroutput>, multiple axes can share the same ticker instance.</para>

<para>This base class generates normal tick coordinates and numeric labels for linear axes. It picks a reasonable tick step (the separation between ticks) which results in readable tick labels. The number of ticks that should be approximately generated can be set via <link linkend="class_q_c_p_axis_ticker_1a47752abba8293e6dc18491501ae34008">setTickCount</link>. Depending on the current tick step strategy (<link linkend="class_q_c_p_axis_ticker_1a73b1d847c1a12159af6bfda4ebebe7d5">setTickStepStrategy</link>), the algorithm either sacrifices readability to better match the specified tick count (<link linkend="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa770312b6b9b0c64a37ceeba96e0cd7f2">QCPAxisTicker::tssMeetTickCount</link>) or relaxes the tick count in favor of better tick steps (<link linkend="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa9002aa2fd5633ab5556c71a26fed63a8">QCPAxisTicker::tssReadability</link>), which is the default.</para>

<para>The following more specialized axis ticker subclasses are available, see details in the respective class documentation:</para>

<para><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'> <table frame="all">
    <title></title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
    <tbody>
<row>
<entry>
<para><link linkend="class_q_c_p_axis_ticker_fixed">QCPAxisTickerFixed</link></para>
</entry><entry>
<para> </para>
</entry></row>
<row>
<entry>
<para><link linkend="class_q_c_p_axis_ticker_log">QCPAxisTickerLog</link></para>
</entry><entry>
<para> </para>
</entry></row>
<row>
<entry>
<para><link linkend="class_q_c_p_axis_ticker_pi">QCPAxisTickerPi</link></para>
</entry><entry>
<para> </para>
</entry></row>
<row>
<entry>
<para><link linkend="class_q_c_p_axis_ticker_text">QCPAxisTickerText</link></para>
</entry><entry>
<para> </para>
</entry></row>
<row>
<entry>
<para><link linkend="class_q_c_p_axis_ticker_date_time">QCPAxisTickerDateTime</link></para>
</entry><entry>
<para> </para>
</entry></row>
<row>
<entry>
<para><link linkend="class_q_c_p_axis_ticker_time">QCPAxisTickerTime</link></para>
</entry><entry>
<para>  </para>
</entry></row>
    </tbody>
    </tgroup>
</table>
</entry></row></tbody></tgroup></informaltable></para>
<section xml:id="class_q_c_p_axis_ticker_1axisticker-subclassing">
<title>Creating own axis tickers</title>

<para>Creating own axis tickers can be achieved very easily by sublassing <link linkend="class_q_c_p_axis_ticker">QCPAxisTicker</link> and reimplementing some or all of the available virtual methods.</para>

<para>In the simplest case you might wish to just generate different tick steps than the other tickers, so you only reimplement the method <link linkend="class_q_c_p_axis_ticker_1a910d69bcec2de37e92d8d4e1ecf201e2">getTickStep</link>. If you additionally want control over the string that will be shown as tick label, reimplement <link linkend="class_q_c_p_axis_ticker_1a8201eb4aa8be192bf786b126eb5ee089">getTickLabel</link>.</para>

<para>If you wish to have complete control, you can generate the tick vectors and tick label vectors yourself by reimplementing <link linkend="class_q_c_p_axis_ticker_1af4645a824c7bd2ca8fc7e86ebf9055bd">createTickVector</link> and <link linkend="class_q_c_p_axis_ticker_1a804050e408f37a0b9770c6654ebe6aa7">createLabelVector</link>. The default implementations use the previously mentioned virtual methods <link linkend="class_q_c_p_axis_ticker_1a910d69bcec2de37e92d8d4e1ecf201e2">getTickStep</link> and <link linkend="class_q_c_p_axis_ticker_1a8201eb4aa8be192bf786b126eb5ee089">getTickLabel</link>, but your reimplementations don&apos;t necessarily need to do so. For example in the case of unequal tick steps, the method <link linkend="class_q_c_p_axis_ticker_1a910d69bcec2de37e92d8d4e1ecf201e2">getTickStep</link> loses its usefulness and can be ignored.</para>

<para>The sub tick count between major ticks can be controlled with <link linkend="class_q_c_p_axis_ticker_1a4ccc403ced7a1457ce6ba293509933c8">getSubTickCount</link>. Full sub tick placement control is obtained by reimplementing <link linkend="class_q_c_p_axis_ticker_1a9a6435723fa0bd366d1ea4c2cff7c33f">createSubTickVector</link>.</para>

<para>See the documentation of all these virtual methods in <link linkend="class_q_c_p_axis_ticker">QCPAxisTicker</link> for detailed information about the parameters and expected return values. </para>
</section>
                <para>Definition at line 1534 of file qcustomplot.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>qcustomplot.h</para></listitem></itemizedlist></para>
        </simplesect>
            <section xml:id="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49a">
               <title>enum TickStepStrategy </title>
               
<para>Defines the strategies that the axis ticker may follow when choosing the size of the tick step.</para>

<para><formalpara><title>See also: </title>

<para><link linkend="class_q_c_p_axis_ticker_1a73b1d847c1a12159af6bfda4ebebe7d5">setTickStepStrategy</link> </para>
</formalpara>
</para>

               <formalpara>
                    <title>Enumerator:</title>
                    <variablelist>
                        <varlistentry xml:id="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa9002aa2fd5633ab5556c71a26fed63a8">
                            <term>tssReadability</term>
                            <listitem>
                                <para>A nicely readable tick step is prioritized over matching the requested number of ticks (see \ref setTickCount)</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49aa770312b6b9b0c64a37ceeba96e0cd7f2">
                            <term>tssMeetTickCount</term>
                            <listitem>
                                <para>Less readable tick steps are allowed which in turn facilitates getting closer to the requested tick count.</para>
                            </listitem>
                        </varlistentry>
                     </variablelist>
                </formalpara>
                <para>Definition at line 1543 of file qcustomplot.h
                    <computeroutput><literallayout>
{
tssReadability, 
tssMeetTickCount, 
}TickStepStrategy;
                    </literallayout></computeroutput>
                </para>
            </section>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="class_q_c_p_axis_ticker_1a8fcf23c79ebd72202fe79253f9f01ea8">
                <title>QCPAxisTicker::QCPAxisTicker ()</title> <emphasis></emphasis>
                
<para>Constructs the ticker and sets reasonable default values. Axis tickers are commonly created managed by a QSharedPointer, which then can be passed to <link linkend="class_q_c_p_axis_1a4ee03fcd2c74d05cd1a419b9af5cfbdc">QCPAxis::setTicker</link>. </para>

            </section>
            <section xml:id="class_q_c_p_axis_ticker_1a1119d6f09ad720f9c5dfdd2559047161">
                <title>QCPAxisTicker::~QCPAxisTicker ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_axis_ticker_1a58df76f2ec3eb48401bdd314b0e14ba1">
                <title>TickStepStrategy QCPAxisTicker::tickStepStrategy () const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_axis_ticker_1aaf9edbe4169ce55e216fd067cc139452">
                <title>int QCPAxisTicker::tickCount () const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_axis_ticker_1ac0c6e9587c36fdeefb5518c00fe7ab15">
                <title>double QCPAxisTicker::tickOrigin () const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_axis_ticker_1a73b1d847c1a12159af6bfda4ebebe7d5">
                <title>void QCPAxisTicker::setTickStepStrategy (TickStepStrategy strategy)</title> <emphasis></emphasis>
                
<para>Sets which strategy the axis ticker follows when choosing the size of the tick step. For the available strategies, see <link linkend="class_q_c_p_axis_ticker_1ab6d2f9d9477821623ac9bc4b21ddf49a">TickStepStrategy</link>. </para>

            </section>
            <section xml:id="class_q_c_p_axis_ticker_1a47752abba8293e6dc18491501ae34008">
                <title>void QCPAxisTicker::setTickCount (int count)</title> <emphasis></emphasis>
                
<para>Sets how many ticks this ticker shall aim to generate across the axis range. Note that <emphasis>count</emphasis> is not guaranteed to be matched exactly, as generating readable tick intervals may conflict with the requested number of ticks.</para>

<para>Whether the readability has priority over meeting the requested <emphasis>count</emphasis> can be specified with <link linkend="class_q_c_p_axis_ticker_1a73b1d847c1a12159af6bfda4ebebe7d5">setTickStepStrategy</link>. </para>

            </section>
            <section xml:id="class_q_c_p_axis_ticker_1ab509c7e500293bf66a8409f0d7c23943">
                <title>void QCPAxisTicker::setTickOrigin (double origin)</title> <emphasis></emphasis>
                
<para>Sets the mathematical coordinate (or &quot;offset&quot;) of the zeroth tick. This tick coordinate is just a concept and doesn&apos;t need to be inside the currently visible axis range.</para>

<para>By default <emphasis>origin</emphasis> is zero, which for example yields ticks {-5, 0, 5, 10, 15,...} when the tick step is five. If <emphasis>origin</emphasis> is now set to 1 instead, the correspondingly generated ticks would be {-4, 1, 6, 11, 16,...}. </para>

            </section>
            <section xml:id="class_q_c_p_axis_ticker_1aefbd11725678ca824add8cf926cbc856">
                <title>void QCPAxisTicker::generate (const QCPRange &amp;range, const QLocale &amp;locale, QChar formatChar, int precision, QVector&lt; double &gt; &amp;ticks, QVector&lt; double &gt; *subTicks, QVector&lt; QString &gt; *tickLabels)</title> <emphasis></emphasis>
                
<para>This is the method called by <link linkend="class_q_c_p_axis">QCPAxis</link> in order to actually generate tick coordinates (<emphasis>ticks</emphasis>), tick label strings (<emphasis>tickLabels</emphasis>) and sub tick coordinates (<emphasis>subTicks</emphasis>).</para>

<para>The ticks are generated for the specified <emphasis>range</emphasis>. The generated labels typically follow the specified <emphasis>locale</emphasis>, <emphasis>formatChar</emphasis> and number <emphasis>precision</emphasis>, however this might be different (or even irrelevant) for certain <link linkend="class_q_c_p_axis_ticker">QCPAxisTicker</link> subclasses.</para>

<para>The output parameter <emphasis>ticks</emphasis> is filled with the generated tick positions in axis coordinates. The output parameters <emphasis>subTicks</emphasis> and <emphasis>tickLabels</emphasis> are optional (set them to 0 if not needed) and are respectively filled with sub tick coordinates, and tick label strings belonging to <emphasis>ticks</emphasis> by index. </para>

            </section>
            <section xml:id="class_q_c_p_axis_ticker_1a910d69bcec2de37e92d8d4e1ecf201e2">
                <title>double QCPAxisTicker::getTickStep (const QCPRange &amp;range)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_axis_ticker_1a4ccc403ced7a1457ce6ba293509933c8">
                <title>int QCPAxisTicker::getSubTickCount (double tickStep)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_axis_ticker_1a8201eb4aa8be192bf786b126eb5ee089">
                <title>QString QCPAxisTicker::getTickLabel (double tick, const QLocale &amp;locale, QChar formatChar, int precision)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_axis_ticker_1af4645a824c7bd2ca8fc7e86ebf9055bd">
                <title>QVector&lt; double &gt; QCPAxisTicker::createTickVector (double tickStep, const QCPRange &amp;range)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_axis_ticker_1a9a6435723fa0bd366d1ea4c2cff7c33f">
                <title>QVector&lt; double &gt; QCPAxisTicker::createSubTickVector (int subTickCount, const QVector&lt; double &gt; &amp;ticks)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_axis_ticker_1a804050e408f37a0b9770c6654ebe6aa7">
                <title>QVector&lt; QString &gt; QCPAxisTicker::createLabelVector (const QVector&lt; double &gt; &amp;ticks, const QLocale &amp;locale, QChar formatChar, int precision)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_axis_ticker_1ab28cc1ab549489be7975f5ce7e717916">
                <title>void QCPAxisTicker::trimTicks (const QCPRange &amp;range, QVector&lt; double &gt; &amp;ticks, bool keepOneOutlier) const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_axis_ticker_1a4ea0a7c4ca1c610f92b9bd5944ab4260">
                <title>double QCPAxisTicker::pickClosest (double target, const QVector&lt; double &gt; &amp;candidates) const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_axis_ticker_1a2f1e223bafbf2cec7c3ba8b08d5c77e8">
                <title>double QCPAxisTicker::getMantissa (double input, double *magnitude=0) const</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_q_c_p_axis_ticker_1ac7df6c72876b7abd67c932663a0b0f6a">
                <title>double QCPAxisTicker::cleanMantissa (double input) const</title> <emphasis></emphasis>
                
            </section>
</section>
