digraph "QCPColorMapData"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{QCPColorMapData\n|# mKeySize\l# mValueSize\l# mIsEmpty\l# mData\l# mAlpha\l# mDataModified\l|+ QCPColorMapData()\l+ ~QCPColorMapData()\l+ QCPColorMapData()\l+ operator=()\l+ keySize()\l+ valueSize()\l+ keyRange()\l+ valueRange()\l+ dataBounds()\l+ data()\l+ cell()\l+ alpha()\l+ setSize()\l+ setKeySize()\l+ setValueSize()\l+ setRange()\l+ setKeyRange()\l+ setValueRange()\l+ setData()\l+ setCell()\l+ setAlpha()\l+ recalculateDataBounds()\l+ clear()\l+ clearAlpha()\l+ fill()\l+ fillAlpha()\l+ isEmpty()\l+ coordToCell()\l+ cellToCoord()\l# createAlpha()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #mDataBounds\n#mValueRange\n#mKeyRange" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{QCPRange\n|+ lower\l+ upper\l+ minRange\l+ maxRange\l|+ QCPRange()\l+ QCPRange()\l+ operator==()\l+ operator!=()\l+ operator+=()\l+ operator-=()\l+ operator*=()\l+ operator/=()\l+ size()\l+ center()\l+ normalize()\l+ expand()\l+ expand()\l+ expanded()\l+ expanded()\l+ bounded()\l+ sanitizedForLogScale()\l+ sanitizedForLinScale()\l+ contains()\l+ validRange()\l+ validRange()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classQCPRange.html",tooltip="Represents the range an axis is encompassing. "];
}
